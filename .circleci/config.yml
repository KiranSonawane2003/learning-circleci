# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.12

    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: 
          name: List Directories recursively
          command: ls -R ~/

      - run: 
          name: Install local dependencies
          command: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      
      - run:
          name: Testing
          command: npm test
      
      # - run:
      #     name: Building
      #     command: |
      #         if [ "${CIRCLE_BRANCH}" == "staging" ]; then
      #             npm run build-qa
      #         elif [ "${CIRCLE_BRANCH}" == "master" ]; then
      #             npm run build-prod
      #         else
      #             npm run build-dev
      #         fi

  deploy:
      machine:
        enabled: true
      steps:
        - checkout
        - run: 
            name: List Directories recursively
            command: ls -R ~/
        - run:
            name: Deploy over SSH
            command: |
                echo 'Copying project to server'
                #
                scp -r -o StrictHostKeyChecking=no ~/project/ $SSH_USER@$SSH_HOST:/home/ec2-user/
                # cat ~/project/bin/serverSide.sh | ssh $SSH_USER@$SSH_HOST 'mkdir -p ~/circleci-dep && cat >> ~/circleci-dep/deploy.sh'
                #
                echo 'executing over server'
                ls -a -R ~
                #
                ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST '~/bin/serverSide.sh'


workflows:
    version: 2
    build-and-deploy:
        jobs:
            - build
            - deploy:
                requires:
                    - build
                filters:
                    branches:
                        only: release3
